// Code generated - EDITING IS FUTILE. DO NOT EDIT.

package customkind2

import (
	time "time"
)

type InnerObject1 struct {
	InnerField1 string         `json:"innerField1"`
	InnerField2 []string       `json:"innerField2"`
	InnerField3 []InnerObject2 `json:"innerField3"`
}

// NewInnerObject1 creates a new InnerObject1 object.
func NewInnerObject1() *InnerObject1 {
	return &InnerObject1{}
}

type InnerObject2 struct {
	Name    string         `json:"name"`
	Details map[string]any `json:"details"`
}

// NewInnerObject2 creates a new InnerObject2 object.
func NewInnerObject2() *InnerObject2 {
	return &InnerObject2{}
}

type Type1 struct {
	Group   string   `json:"group"`
	Options []string `json:"options,omitempty"`
}

// NewType1 creates a new Type1 object.
func NewType1() *Type1 {
	return &Type1{}
}

type Type2 struct {
	Group   string         `json:"group"`
	Details map[string]any `json:"details"`
}

// NewType2 creates a new Type2 object.
func NewType2() *Type2 {
	return &Type2{}
}

type UnionType any

type CustomKind2 struct {
	Field1     string           `json:"field1"`
	Inner      InnerObject1     `json:"inner"`
	Union      UnionType        `json:"union"`
	Map        map[string]Type2 `json:"map"`
	Timestamp  time.Time        `json:"timestamp"`
	Enum       CustomKind2Enum  `json:"enum"`
	I32        int32            `json:"i32"`
	I64        int64            `json:"i64"`
	BoolField  bool             `json:"boolField"`
	FloatField float64          `json:"floatField"`
}

// NewCustomKind2 creates a new CustomKind2 object.
func NewCustomKind2() *CustomKind2 {
	return &CustomKind2{
		Inner:     *NewInnerObject1(),
		BoolField: false,
	}
}

type CustomKind2Enum string

const (
	CustomKind2EnumVal1    CustomKind2Enum = "val1"
	CustomKind2EnumVal2    CustomKind2Enum = "val2"
	CustomKind2EnumVal3    CustomKind2Enum = "val3"
	CustomKind2EnumVal4    CustomKind2Enum = "val4"
	CustomKind2EnumDefault CustomKind2Enum = "default"
)
