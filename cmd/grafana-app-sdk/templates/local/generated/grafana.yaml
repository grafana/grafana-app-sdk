apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: default
---
{{ range $.CRDs }}apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana:{{.MachineName}}-user-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{.MachineName}}-user
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: default
---
{{end}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.PluginIDKube}}-provisioning
  namespace: default
  labels:
    name: grafana
data:
  gas-local-env-app-app.yaml: |
    apiVersion: 1
    apps:
      - type: {{.PluginID}}
        org_id: 1
        org_name: Main Org.
        disabled: false
        jsonData:{{ range $key, $value := .JSONData }}
          {{ $key }}: {{ $value }}{{end}}
        secureJsonData:{{ range $key, $value := .SecureJSONData }}
          {{ $key }}: {{ $value }}{{end}}
{{ if .GenerateGrafanaDeployment }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
  labels:
    name: grafana
data:
  grafana.ini: | 
    [analytics]
    reporting_enabled = false
    [tracing.opentelemetry.otlp]
    address = tempo.default.svc:4317
    [auth.anonymous]
    enabled = true
    org_role = Admin
    [log.frontend]
    enabled = true
    [plugins]
    allow_loading_unsigned_plugins = {{.PluginID}}
    [plugin.{{.PluginID}}]
    tracing = true
    [server]
    http_port = 3000
    root_url = 
    router_logging = true
    [unified_alerting]
    enabled = true
    [users]
    default_theme = dark
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
  labels:
    name: grafana
spec:
  ports:
    - name: grafana-grafana-metrics
      port: 3000
      targetPort: 3000
    - name: http
      port: 80
      targetPort: 3000
  selector:
    name: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: default
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: grafana
  template:
    metadata:
      labels:
        name: grafana
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
            - name: GF_PATHS_CONFIG
              value: /etc/grafana-config/grafana.ini
          image: grafana/grafana-enterprise:9.5.8
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana-metrics
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
          volumeMounts:
            - mountPath: /etc/grafana-config
              name: grafana-config
            - mountPath: /etc/grafana/provisioning/plugins
              name: {{.PluginIDKube}}-provisioning
            - mountPath: /var/lib/grafana/plugins/{{.PluginID}}
              name: {{.PluginIDKube}}
              readOnly: true
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
      serviceAccount: grafana
      volumes:
        - configMap:
            name: grafana-config
          name: grafana-config
        - configMap:
            name: {{.PluginIDKube}}-provisioning
          name: {{.PluginIDKube}}-provisioning
        - hostPath:
            path: /tmp/k3d/mounted-files/plugin/dist
          name: {{.PluginIDKube}}
        - configMap:
            name: grafana-datasources
          name: grafana-datasources
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: default
spec:
  rules:
    - host: grafana.k3d.localhost
      http:
        paths:
          - backend:
              service:
                name: grafana
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    name: grafana
  name: grafana-datasources
  namespace: default
data:
  Cortex.yml: |
    apiVersion: 1
    datasources:{{ range .Datasources }}
        - access: {{.Access}}
          editable: false
          isDefault: {{.IsDefault}}
          name: {{.Name}}
          type: {{.Type}}
          uid: {{.UID}}
          url: {{.URL}}
          version: 1{{end}}
{{end}}
